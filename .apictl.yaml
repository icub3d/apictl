contexts:
  local:
    base_url: http://localhost:3000
    # TODO: (?) allow for non-string characters
    pagination_limit: "10"
requests:
  get-posts:
    tags: [get]
    description: a simple get
    url: "${base_url}/posts"
    query_parameters:
      _limit: "${pagination_limit}"

  get-user-from-first-post:
    tags: [get]
    description: get the info for the first user from the call to get-posts
    url: "${base_url}/users/${response.get-posts.0.userId}"

  new-post:
    tags: [post]
    description: make a new post
    url: "${base_url}/posts"
    method: "POST"
    headers:
      content-type: application/json
    body:
      type: raw
      from:
        type: text
        data: |
          {
            "userId": 1,
            "title": "test post",
            "body": "This is a test post to the json server."
          }

  get-new-post:
    tags: [get]
    description: get the post from new-post
    url: "${base_url}/posts/${response.new-post.id}"
tests:
  create-new-post:
    description: create a new post and check to make sure it's there.
    steps:
      - name: create-post
        request: new-post
        asserts:
          - type: status_code
            value: 201
          - type: header_contains
            key: content-type
            value: application/json
          - type: equals
            key: userId
            value: "1"
          - type: not_equals
            key: userId
            value: "10"
      - name: check-post
        request: get-new-post
        asserts:
          - type: status_code
            value: 200
          - type: equals
            key: userId
            value: "1"
          - type: equals
            key: title
            value: "test post"
